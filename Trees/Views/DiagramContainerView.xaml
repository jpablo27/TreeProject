<UserControl
    x:Class="Trees.Views.DiagramContainerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
    xmlns:local="clr-namespace:Trees.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:trees="clr-namespace:Trees"
    x:Name="node"
    d:DataContext="{d:DesignInstance trees:Node}"
    mc:Ignorable="d" Margin="4,0,0,0">
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem
                Command="{Binding DeleteCommand}"
                CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                Header="Delete" />
            <MenuItem 
                Command="{Binding BalanceCommand}"
                CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" 
                Header="Balance" />
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid Visibility="{Binding Node, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="5" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>

            <ColumnDefinition Width="Auto" />

            <ColumnDefinition
                Width="25"
                MinWidth="25"
                MaxWidth="25" />
            <ColumnDefinition
                Width="25"
                MinWidth="25"
                MaxWidth="25" />

            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />

        </Grid.ColumnDefinitions>
        <Border
            x:Name="border"
            Grid.Row="1"
            Grid.Column="1"
            Grid.ColumnSpan="2"
            Width="50"
            Height="50"
            HorizontalAlignment="Left"
            BorderBrush="CadetBlue"
            BorderThickness="1"
            CornerRadius="20">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="AliceBlue" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=border, Path=IsMouseOver}" Value="True">
                            <Setter Property="Background" Value="Pink" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBlock
                VerticalAlignment="Center"
                FontSize="16"
                FontWeight="DemiBold"
                Foreground="CadetBlue"
                Text="{Binding ElementName=node, Path=Node.Id}"
                TextAlignment="Center"
                TextWrapping="Wrap" />
        </Border>

        <!--  Left Paths  -->
        <Path
            Grid.Row="2"
            Grid.Column="1"
            Stroke="Black"
            StrokeThickness="1"
            Visibility="{Binding Node.LeftChild, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure StartPoint="25,0">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <ArcSegment
                                            IsLargeArc="False"
                                            Point="20,5"
                                            Size="5,5"
                                            SweepDirection="Clockwise" />
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
        <Grid
            Grid.Row="2"
            Grid.Column="1"
            Height="1"
            Margin="5,0,5,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            Background="Black"
            Visibility="{Binding Node.LeftChild, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}" />
        <Grid
            Grid.Row="0"
            Grid.Column="2"
            Visibility="{Binding Node.Parent, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
            <Path
                Stroke="Black"
                StrokeThickness="1"
                Visibility="{Binding Node.Side, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource LeftVisible}}">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="0,5">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <ArcSegment
                                                IsLargeArc="False"
                                                Point="5,0"
                                                Size="5,5"
                                                SweepDirection="Clockwise" />
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>

        </Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            Height="1"
            Margin="5,-1,20,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Visibility="{Binding Node.Parent, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
            <Grid Background="Black" Visibility="{Binding Node.Side, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource LeftVisible}}" />

        </Grid>

        <!--  Right Paths  -->
        <Path
            Grid.Row="2"
            Grid.Column="2"
            HorizontalAlignment="Left"
            Stroke="Black"
            StrokeThickness="1"
            Visibility="{Binding Node.RightChild, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure StartPoint="0,0">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <ArcSegment
                                            IsLargeArc="False"
                                            Point="5,5"
                                            Size="5,5"
                                            SweepDirection="Counterclockwise" />
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
        <Grid
            Grid.Row="0"
            Grid.Column="2"
            Visibility="{Binding Node.Parent, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
            <Path
                Stroke="Black"
                StrokeThickness="1"
                Visibility="{Binding Node.Side, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource RightVisible}}">
                <Path.Data>
                    <PathGeometry>
                        <PathGeometry.Figures>
                            <PathFigureCollection>
                                <PathFigure StartPoint="-5,0">
                                    <PathFigure.Segments>
                                        <PathSegmentCollection>
                                            <ArcSegment
                                                IsLargeArc="False"
                                                Point="0,5"
                                                Size="5,5"
                                                SweepDirection="Clockwise" />
                                        </PathSegmentCollection>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathFigureCollection>
                        </PathGeometry.Figures>
                    </PathGeometry>
                </Path.Data>
            </Path>

        </Grid>
        <Grid
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Height="1"
            Margin="1,-1,5,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Visibility="{Binding Node.Parent, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource notNullToVisibilityConverter}}">
            <Grid Background="Black" Visibility="{Binding Node.Side, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}, Converter={StaticResource RightVisible}}" />

        </Grid>

        <!--  Left & Right Children  -->
        <Grid
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Center">
            <local:DiagramContainerView DataContext="{Binding LeftChild}" Node="{Binding Node.LeftChild, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}}" />
        </Grid>

        <Grid
            Grid.Row="3"
            Grid.Column="2"
            Grid.ColumnSpan="2">
            <local:DiagramContainerView DataContext="{Binding RightChild}" Node="{Binding Node.RightChild, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=local:DiagramContainerView}}" />
        </Grid>

    </Grid>
</UserControl>
